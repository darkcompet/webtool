// <auto-generated />
using System;
using App;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebTool.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231001042813_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.BingoClientModel", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("bingo_code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("bingo_code");

                    b.Property<DateTime?>("bingo_hit_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("bingo_hit_at");

                    b.Property<string>("client_id")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<long>("winner_issued_by_user")
                        .HasColumnType("bigint")
                        .HasColumnName("winner_issued_by_user");

                    b.HasKey("id");

                    b.HasIndex("bingo_code");

                    b.HasIndex("client_id")
                        .IsUnique();

                    b.ToTable("bingo_client");
                });

            modelBuilder.Entity("App.BingoModel", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("consumed_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("consumed_at");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("id");

                    b.HasIndex("code")
                        .IsUnique();

                    b.ToTable("bingo");
                });

            modelBuilder.Entity("App.UserModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("avatar_relative_path")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar_relative_path");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<byte>("gender")
                        .HasColumnType("tinyint")
                        .HasColumnName("gender");

                    b.Property<DateTime?>("last_login_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_login_at");

                    b.Property<int>("login_failed_count")
                        .HasColumnType("int")
                        .HasColumnName("login_failed_count");

                    b.Property<DateTime?>("login_locked_until")
                        .HasColumnType("datetime2")
                        .HasColumnName("login_locked_until");

                    b.Property<string>("name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("name");

                    b.Property<long>("number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("number");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("number"), 999L);

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<byte>("role")
                        .HasColumnType("tinyint")
                        .HasColumnName("role");

                    b.Property<byte>("signup_type")
                        .HasColumnType("tinyint")
                        .HasColumnName("signup_type");

                    b.Property<byte>("status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<string>("telno")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("telno");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("id");

                    b.HasIndex("code")
                        .IsUnique();

                    b.HasIndex("email")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex("name");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("4d0e03f8-b8e8-473c-b2e8-969d0a646e8b"),
                            code = "darkcompet",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "darkcompet@gmail.com",
                            gender = (byte)0,
                            login_failed_count = 0,
                            name = "DarkCompet",
                            number = 0L,
                            password = "Test1234!",
                            role = (byte)100,
                            signup_type = (byte)0,
                            status = (byte)1
                        },
                        new
                        {
                            id = new Guid("0932f23b-ae95-4022-af38-2edf39535ed2"),
                            code = "vuonghuyminh",
                            created_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "vuonghuyminh.pr@gmail.com",
                            gender = (byte)0,
                            login_failed_count = 0,
                            name = "Vuong Huy Minh",
                            number = 0L,
                            password = "Test1234!",
                            role = (byte)80,
                            signup_type = (byte)0,
                            status = (byte)1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
